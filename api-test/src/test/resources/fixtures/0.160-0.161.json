[
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface react4j.annotations.ScheduleRender",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.annotations.ScheduleRender",
      "classSimpleName": "ScheduleRender",
      "elementKind": "@interface",
      "package": "react4j.annotations"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean react4j.internal.arez.IntrospectUtil::prepareStateUpdate(jsinterop.base.JsPropertyMap<java.lang.Object>, jsinterop.base.JsPropertyMap<java.lang.Object>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.internal.arez.IntrospectUtil",
      "classSimpleName": "IntrospectUtil",
      "elementKind": "method",
      "methodName": "prepareStateUpdate",
      "package": "react4j.internal.arez"
    }
  },
  {
    "code": "java.method.visibilityIncreased",
    "description": "visibility increased",
    "element": "method react4j.internal.NativeComponent react4j.Component::component()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.Component",
      "classSimpleName": "Component",
      "elementKind": "method",
      "methodName": "component",
      "newVisibility": "protected",
      "oldVisibility": "private",
      "package": "react4j"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int react4j.Component::getComponentId()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.Component",
      "classSimpleName": "Component",
      "elementKind": "method",
      "methodName": "getComponentId",
      "package": "react4j"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String react4j.Component::getComponentName()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.Component",
      "classSimpleName": "Component",
      "elementKind": "method",
      "methodName": "getComponentName",
      "package": "react4j"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method jsinterop.base.JsPropertyMap<java.lang.Object> react4j.Component::props()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.Component",
      "classSimpleName": "Component",
      "elementKind": "method",
      "methodName": "props",
      "package": "react4j"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void react4j.Component::populateDebugData(jsinterop.base.JsPropertyMap<java.lang.Object>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.Component",
      "classSimpleName": "Component",
      "elementKind": "method",
      "methodName": "populateDebugData",
      "package": "react4j"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void react4j.Component::scheduleRender()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.Component",
      "classSimpleName": "Component",
      "elementKind": "method",
      "methodName": "scheduleRender",
      "package": "react4j"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void react4j.Component::scheduleRender(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.Component",
      "classSimpleName": "Component",
      "elementKind": "method",
      "methodName": "scheduleRender",
      "package": "react4j"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void react4j.Component::storeDebugDataAsState()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.Component",
      "classSimpleName": "Component",
      "elementKind": "method",
      "methodName": "storeDebugDataAsState",
      "package": "react4j"
    }
  }
]
